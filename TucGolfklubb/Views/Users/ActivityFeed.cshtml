@model List<TucGolfklubb.Models.UserActivity>
@inject TucGolfklubb.Data.ApplicationDbContext db

<div class="container forum-page">
    <h2 class="mb-4" style="color: #001b2e;">Aktivitetsflöde</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info rounded-3">Inga aktiviteter från användare du följer ännu.</div>
    }
    else
    {
        <div class="row row-cols-1 g-3">
            @foreach (var activity in Model)
            {
                <div class="col">
                    <div class="card shadow-sm border-0 rounded-3">
                        <div class="card-body" style="background-color: #b3cde4;">
                            @{
                                string actionText = "";
                                string targetUserName = "";
                                string linkUrl = "#";

                                if (activity.Type == "Review")
                                {
                                    linkUrl = Url.Action("Index", "Shop") + $"#product-{activity.ProductId}";
                                    actionText = "skrev en recension för:";
                                }
                                else if (activity.Type == "Purchase")
                                {
                                    linkUrl = Url.Action("OrderDetails", "Orders", new { id = activity.OrderId }) ?? "#";
                                    actionText = "gjorde ett köp:";
                                }
                                else if (activity.Type == "Post")
                                {
                                    linkUrl = Url.Action("Details", "ForumPosts", new { id = activity.ForumPostId }) ?? "#";
                                    actionText = "skrev ett inlägg:";
                                }
                                else if (activity.Type == "Comment")
                                {
                                    linkUrl = Url.Action("Details", "ForumPosts", new { id = activity.ForumPostId }) ?? "#";
                                    actionText = "kommenterade ett inlägg:";
                                }
                                else if (activity.Type == "Forum")
                                {
                                    actionText = "skapade ett forum:";
                                    linkUrl = "#";
                                }
                                else if (activity.Type == "Reply")
                                {
                                    var reply = db.Replies.FirstOrDefault(r => r.Id == activity.ForumReplyId);
                                    if (reply != null)
                                    {
                                        linkUrl = Url.Action("Details", "ForumPosts", new { id = reply.ForumPostId }) + $"#reply-{reply.Id}";
                                        var parentReply = db.Replies.FirstOrDefault(r => r.Id == reply.ParentReplyId);

                                        if (parentReply?.User == null)
                                            targetUserName = "okänd användare";
                                        else if ((parentReply.User.Email?.ToLower() ?? "") == "admin@golfklubb.se")
                                            targetUserName = "Admin";
                                        else
                                            targetUserName = parentReply.User.FullName ?? parentReply.User.UserName ?? "användaren";

                                        actionText = parentReply?.ParentReplyId == null
                                        ? $"svarade på {targetUserName}s kommentar:"
                                        : $"svarade på {targetUserName}s svar:";
                                    }
                                    else
                                    {
                                        actionText = "svarade:";
                                    }
                                }
                                else
                                {
                                    actionText = $"gjorde en {activity.Type.ToLower()}:";
                                }

                                var name = activity.User?.FullName;
                                if (activity.User == null)
                                {
                                    name = "Okänd användare";
                                }
                                else if ((activity.User.Email?.ToLower() ?? "") == "admin@golfklubb.se")
                                {
                                    name = "Admin";
                                }
                            }

                            <p class="mb-1" style="color: #001b2e;">
                                <strong>@name</strong> @actionText
                                @if (activity.Type == "Review")
                                {
                                    var productName = activity.Content.Replace("Skrev en recension för \"", "").Replace("\"", "");
                                    <a href="@linkUrl" class="text-decoration-none">@productName</a>
                                }
                                else if (activity.Type == "Purchase")
                                {
                                    <a href="@linkUrl" class="text-decoration-none">(Order #@activity.OrderId)</a>
                                }
                                else if (activity.Type != "Purchase")
                                {
                                    <a href="@linkUrl" class="text-decoration-none">@activity.Content</a>
                                }
                            </p>
                            <small class="text-muted">@activity.CreatedAt.ToString("yyyy-MM-dd HH:mm")</small>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(ViewData["PreviousPageUrl"]?.ToString()))
    {
        <div class="d-flex justify-content-center mt-3">
            <a href="@ViewData["PreviousPageUrl"]" class="btn btn-sm custom-dark-button">Tillbaka till föregående sida</a>
        </div>
    }

</div>
