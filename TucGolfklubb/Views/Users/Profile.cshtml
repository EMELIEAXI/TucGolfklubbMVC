@model TucGolfklubb.Models.UserProfileViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

<div class="container forum-page">
    <div class="card border-0 shadow-sm p-4" style="background-color: #b3cde4;">
        <div class="d-flex align-items-center mb-3">
            <img src="@(!string.IsNullOrEmpty(Model.ProfileImagePath) ? Model.ProfileImagePath : "/images/default-user.png")"
                 alt="Profilbild"
                 class="rounded-circle me-4"
                 style="width: 100px; height: 100px; object-fit: cover;" />

            <div>
                <h3 style="color: #001b2e;">@(Model.FullName ?? Model.UserName)</h3>

                @if (User.Identity != null && User.Identity.IsAuthenticated && UserManager.GetUserId(User) != Model.Id)
                {
                    <div class="mt-2">
                        @if (Model.IsFollowedByCurrentUser)
                        {
                            <form asp-action="Unfollow" asp-controller="UserFollows" method="post">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <button type="submit" class="btn btn-sm custom-dark-button">Sluta följa</button>
                            </form>
                        }
                        else
                        {
                            <form asp-action="Follow" asp-controller="UserFollows" method="post">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <button type="submit" class="btn btn-sm custom-dark-button">Följ</button>
                            </form>
                        }
                    </div>
                }
            </div>
        </div>

        <hr />

        <h5 style="color: #001b2e;">Senaste aktivitet</h5>
        @if (Model.RecentActivities == null || !Model.RecentActivities.Any())
        {
            <p class="text-muted">Inga aktiviteter ännu.</p>
        }
        else
        {
            <ul class="list-group">
                @foreach (var activity in Model.RecentActivities)
                {
                    <li class="list-group-item">
                        Gjorde en <span style="color: #1d3f58;">@activity.Type</span>: @activity.Content
                        <br />
                        <small class="text-muted">@activity.CreatedAt.ToString("g")</small>
                    </li>
                }
            </ul>
        }

        <!-- Buttons (Back and Back to Users) -->
        <div class="d-flex justify-content-start gap-2 mt-3">
            @if (!string.IsNullOrEmpty(Model.PreviousPageUrl))
            {
                <a href="@Model.PreviousPageUrl" class="btn btn-sm custom-dark-button">Tillbaka till föregående sida</a>
            }

            <a href="/Users/Index" class="btn btn-sm custom-dark-button">Tillbaka till Användare</a>
        </div>
    </div>
</div>
